<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/mx"
    showStatusBar="false"
    creationComplete="onCreationComplete(event)"
    close="onClose(event)">
    
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>
    
    <fx:Script>
        <![CDATA[
            import com.adobe.crypto.MD5;
            
            import mx.controls.Alert;
            import mx.events.FlexEvent;
            
            import net.Client;
            import net.Messenger;
            import net.Peer;
            import net.Server;
            
            import util.Logger;
            
            private var server:Server;
            private var client:Client;
            
            private var targetIp:String;
            private var port:int = 54321;
            
            private var messenger:Messenger;
            
            private function doConnect():void
            {
                if (client || server)
                {
                    Logger.log("ERROR: client already running.");
                    return;
                }
                
                messenger = new Messenger();
                
                client = new Client();
                client.init(messenger, new Peer(targetIp, port));
            }
            
            private function onConnectClick(e:MouseEvent):void
            {
                targetIp = otherIp.text;
                doConnect();
            }
            
            private function onHostClick(e:MouseEvent):void
            {
                if (server || client)
                {
                    Logger.log("ERROR: server already running.");
                    return;
                }
                
                messenger = new Messenger();
                
                server = new Server();
                server.init(messenger, new Peer('', port));
            }
            
            private function addMessage(msg:String):void
            {
                chatLog.text += msg + "\n";
            }
            
            private function onEnter():void
            {
//                if (chatMsg.text.length > 0)
//                {
//                    onSend(null);
//                }
            }
            
            private function onSend(e:MouseEvent):void
            {
                
            }
            
            private function onCreationComplete(e:FlexEvent):void
            {
                Logger.init(log);
            }
            
            private function onClose(e:Event):void
            {
                if (server)
                {
                    server.shutdown();
                }
                
                if (client)
                {
                    client.shutdown();
                }
            }
            
            private function log(msg:String):void
            {
                if (logArea)
                {
                    logArea.text += msg;
                    logArea.text += "\n";
                    logArea.scrollToRange(logArea.text.length - 2, logArea.text.length - 1);
                }
            }
             
        ]]>
    </fx:Script>
    
    <s:layout>
        <s:VerticalLayout
            gap="12"
            paddingTop="12"
            paddingRight="12"
            paddingBottom="12"
            paddingLeft="12"/>
    </s:layout>
    
    <s:states>
        
        <s:State name="init"/>
        <s:State name="chat"/>
                
    </s:states>
    
    <s:Group
        includeIn="init"
        percentWidth="100"
        percentHeight="100">
        
        <s:layout>
            <s:VerticalLayout
                gap="12"
                horizontalAlign="center"
                verticalAlign="middle"/>
        </s:layout>
        
        <s:Label
            text="Connect To"/>
        
        <s:TextInput
            id="otherIp"
            text="192.168.0.100"/>
        
        <s:Button
            id="connect"
            label="Connect"
            click="onConnectClick(event)"/>
        
        <mx:HRule
            percentWidth="100"/>
        
        <s:Button
            id="host"
            label="Host"
            click="onHostClick(event)"/>
        
        <s:Spacer
            percentHeight="100"/>
        
        <s:TextArea
            id="logArea"
            percentWidth="100"
            height="100"
            editable="false"/>
            
    </s:Group>
    
    <s:VGroup
        includeIn="chat"
        percentWidth="100"
        percentHeight="100">
        
        <s:Label
            text="Chat Log"/>
        
        <s:TextArea
            id="chatLog"
            width="100%"
            height="200"/>
        
        <s:Label
            text="Send This"/>
        
        <s:TextInput
            id="chatMsg"
            width="100%"
            enter="onEnter()"/>
        
        <s:Button
            id="send"
            label="Send"
            width="100%"
            click="onSend(event)"
            enabled="{chatMsg.text.length > 0}"/>
        
    </s:VGroup>
    
</s:WindowedApplication>
